package src.TestSuite;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith; 
import org.junit.runners.Suite;

import src.MyGenericsStack;

class MyGenericsStackTestClass {
	private MyGenericsStack<String> GenericsStack = new MyGenericsStack<String>(5);

//	@Test
	public void testMyGenericsStackObject() {
		assertNotNull(GenericsStack);
	}
	
	public void testPush() {
		assertNotNull(GenericsStack);
		assertFalse(GenericsStack.isStackFull());
		while(!GenericsStack.isStackFull()) {
			GenericsStack.push("a");
		}
		assertTrue(GenericsStack.isStackFull());
		GenericsStack.push("b");
		assertFalse(GenericsStack.isStackFull());
		testPeek();
	} 
	
//	@Test
	public void testPushPop() {
		testPush();
		try {
			while(!GenericsStack.isStackEmpty()) {
				GenericsStack.pop();
			}
			GenericsStack.pop();
		} catch(Exception ex) {
			assertEquals("Stack is empty. Can not remove element.",ex.getMessage());
		}
	}
	
	public void testPeek() {
		assertEquals(GenericsStack.peek(), "b");
	}

}
@RunWith(Suite.class) 
@Suite.SuiteClasses({
//	MyGenericsStackTestCase.class
//	InfixFullParantExTest.class,
//	MyDynamicStackTest.class,
//	TowersOfHanoiImplTest.class,
//	MyMergeSortTest.class,
//	MyLinearSearchTest.class,
//	MyBinarySearchTest.class,
//	RecursiveSearchTest.class
})
public class MyTestSuiteEx {
	private MyGenericsStackTestClass myGenericsStackTestClass = new MyGenericsStackTestClass();
	
//	@BeforeClass 
//	public void setUpClass() {
//        // Common initialization done once
//    }
	@Test
	public void testMyGenericsStack() {
		myGenericsStackTestClass.testMyGenericsStackObject();
		myGenericsStackTestClass.testPushPop();
	}
	
//    @AfterClass 
//    public static void tearDownClass() {
//        // Common cleanup for all tests
//    }
}
